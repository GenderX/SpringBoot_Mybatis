<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.employeesMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.employees" >
    <id column="EmployeeID" property="employeeid" jdbcType="INTEGER" />
    <result column="LastName" property="lastname" jdbcType="VARCHAR" />
    <result column="FirstName" property="firstname" jdbcType="VARCHAR" />
    <result column="Title" property="title" jdbcType="VARCHAR" />
    <result column="TitleOfCourtesy" property="titleofcourtesy" jdbcType="VARCHAR" />
    <result column="BirthDate" property="birthdate" jdbcType="TIMESTAMP" />
    <result column="HireDate" property="hiredate" jdbcType="TIMESTAMP" />
    <result column="Address" property="address" jdbcType="VARCHAR" />
    <result column="City" property="city" jdbcType="VARCHAR" />
    <result column="Region" property="region" jdbcType="VARCHAR" />
    <result column="PostalCode" property="postalcode" jdbcType="VARCHAR" />
    <result column="Country" property="country" jdbcType="VARCHAR" />
    <result column="HomePhone" property="homephone" jdbcType="VARCHAR" />
    <result column="Extension" property="extension" jdbcType="VARCHAR" />
    <result column="ReportsTo" property="reportsto" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.model.employeesWithBLOBs" extends="BaseResultMap" >
    <result column="Photo" property="photo" jdbcType="LONGVARBINARY" />
    <result column="Notes" property="notes" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, 
    City, Region, PostalCode, Country, HomePhone, Extension, ReportsTo, password
  </sql>
  <sql id="Blob_Column_List" >
    Photo, Notes
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from employees
    where EmployeeID = #{employeeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employees
    where EmployeeID = #{employeeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.model.employeesWithBLOBs" >
    insert into employees (EmployeeID, LastName, FirstName, 
      Title, TitleOfCourtesy, BirthDate, 
      HireDate, Address, City, 
      Region, PostalCode, Country, 
      HomePhone, Extension, ReportsTo, 
      password, Photo, Notes
      )
    values (#{employeeid,jdbcType=INTEGER}, #{lastname,jdbcType=VARCHAR}, #{firstname,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{titleofcourtesy,jdbcType=VARCHAR}, #{birthdate,jdbcType=TIMESTAMP}, 
      #{hiredate,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{postalcode,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{homephone,jdbcType=VARCHAR}, #{extension,jdbcType=VARCHAR}, #{reportsto,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{photo,jdbcType=LONGVARBINARY}, #{notes,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.employeesWithBLOBs" >
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        EmployeeID,
      </if>
      <if test="lastname != null" >
        LastName,
      </if>
      <if test="firstname != null" >
        FirstName,
      </if>
      <if test="title != null" >
        Title,
      </if>
      <if test="titleofcourtesy != null" >
        TitleOfCourtesy,
      </if>
      <if test="birthdate != null" >
        BirthDate,
      </if>
      <if test="hiredate != null" >
        HireDate,
      </if>
      <if test="address != null" >
        Address,
      </if>
      <if test="city != null" >
        City,
      </if>
      <if test="region != null" >
        Region,
      </if>
      <if test="postalcode != null" >
        PostalCode,
      </if>
      <if test="country != null" >
        Country,
      </if>
      <if test="homephone != null" >
        HomePhone,
      </if>
      <if test="extension != null" >
        Extension,
      </if>
      <if test="reportsto != null" >
        ReportsTo,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="photo != null" >
        Photo,
      </if>
      <if test="notes != null" >
        Notes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="lastname != null" >
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null" >
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleofcourtesy != null" >
        #{titleofcourtesy,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null" >
        #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="hiredate != null" >
        #{hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="homephone != null" >
        #{homephone,jdbcType=VARCHAR},
      </if>
      <if test="extension != null" >
        #{extension,jdbcType=VARCHAR},
      </if>
      <if test="reportsto != null" >
        #{reportsto,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=LONGVARBINARY},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.employeesWithBLOBs" >
    update employees
    <set >
      <if test="lastname != null" >
        LastName = #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null" >
        FirstName = #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleofcourtesy != null" >
        TitleOfCourtesy = #{titleofcourtesy,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null" >
        BirthDate = #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="hiredate != null" >
        HireDate = #{hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        Address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        City = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        Region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        PostalCode = #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        Country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="homephone != null" >
        HomePhone = #{homephone,jdbcType=VARCHAR},
      </if>
      <if test="extension != null" >
        Extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="reportsto != null" >
        ReportsTo = #{reportsto,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        Photo = #{photo,jdbcType=LONGVARBINARY},
      </if>
      <if test="notes != null" >
        Notes = #{notes,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where EmployeeID = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.model.employeesWithBLOBs" >
    update employees
    set LastName = #{lastname,jdbcType=VARCHAR},
      FirstName = #{firstname,jdbcType=VARCHAR},
      Title = #{title,jdbcType=VARCHAR},
      TitleOfCourtesy = #{titleofcourtesy,jdbcType=VARCHAR},
      BirthDate = #{birthdate,jdbcType=TIMESTAMP},
      HireDate = #{hiredate,jdbcType=TIMESTAMP},
      Address = #{address,jdbcType=VARCHAR},
      City = #{city,jdbcType=VARCHAR},
      Region = #{region,jdbcType=VARCHAR},
      PostalCode = #{postalcode,jdbcType=VARCHAR},
      Country = #{country,jdbcType=VARCHAR},
      HomePhone = #{homephone,jdbcType=VARCHAR},
      Extension = #{extension,jdbcType=VARCHAR},
      ReportsTo = #{reportsto,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      Photo = #{photo,jdbcType=LONGVARBINARY},
      Notes = #{notes,jdbcType=LONGVARCHAR}
    where EmployeeID = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.employees" >
    update employees
    set LastName = #{lastname,jdbcType=VARCHAR},
      FirstName = #{firstname,jdbcType=VARCHAR},
      Title = #{title,jdbcType=VARCHAR},
      TitleOfCourtesy = #{titleofcourtesy,jdbcType=VARCHAR},
      BirthDate = #{birthdate,jdbcType=TIMESTAMP},
      HireDate = #{hiredate,jdbcType=TIMESTAMP},
      Address = #{address,jdbcType=VARCHAR},
      City = #{city,jdbcType=VARCHAR},
      Region = #{region,jdbcType=VARCHAR},
      PostalCode = #{postalcode,jdbcType=VARCHAR},
      Country = #{country,jdbcType=VARCHAR},
      HomePhone = #{homephone,jdbcType=VARCHAR},
      Extension = #{extension,jdbcType=VARCHAR},
      ReportsTo = #{reportsto,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR}
    where EmployeeID = #{employeeid,jdbcType=INTEGER}
  </update>
</mapper>